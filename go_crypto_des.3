.\"    Automatically generated by mango(1)
.TH "des" 3 "2014-11-26" "version 2014-11-26" "Go Packages"
.SH "NAME"
des \- Package des implements the Data Encryption Standard (DES) and the
Triple Data Encryption Algorithm (TDEA) as defined
in U.S.
.SH "SYNOPSIS"
.B import \*(lqdes\(rq
.sp
.B Constants
.sp 0
.RB "func " NewCipher
.sp 0
.RB "func " NewTripleDESCipher
.sp 0
.RB "type " KeySizeError
.sp 0
.RS
.RB "func (KeySizeError) " Error
.sp 0
.RE
.RB "type " desCipher
.sp 0
.RS
.RB "func (*desCipher) " BlockSize
.sp 0
.RB "func (*desCipher) " Decrypt
.sp 0
.RB "func (*desCipher) " Encrypt
.sp 0
.RE
.RB "type " tripleDESCipher
.sp 0
.RS
.RB "func (*tripleDESCipher) " BlockSize
.sp 0
.RB "func (*tripleDESCipher) " Decrypt
.sp 0
.RB "func (*tripleDESCipher) " Encrypt
.sp 0
.RE
.SH "DESCRIPTION"
Package des implements the Data Encryption Standard (DES) and the Triple Data Encryption Algorithm (TDEA) as defined in U.S. 
Federal Information Processing Standards Publication 46\-3. 
.SH "CONSTANTS"
The DES block size in bytes. 
.PP
.B const 
.B BlockSize 
.sp 0
.SH "FUNCTIONS"
.PP
.BR "func NewCipher(" "key" " []byte) (cipher.Block, error)"
.PP
NewCipher creates and returns a new cipher.Block. 
.PP
.BR "func NewTripleDESCipher(" "key" " []byte) (cipher.Block, error)"
.PP
NewTripleDESCipher creates and returns a new cipher.Block. 
.SH "TYPES"
.SS "KeySizeError"
.B type KeySizeError int
.PP
.PP
.BR "func (KeySizeError) Error() string"
.SS "desCipher"
.B type desCipher struct {
.RS
.sp 0
.B //contains unexported fields.
.RE
.B }
.PP
desCipher is an instance of DES encryption. 
.PP
.BR "func (*desCipher) BlockSize() int"
.PP
.BR "func (*desCipher) Decrypt(" "dst" ", " "src" " []byte)"
.PP
.BR "func (*desCipher) Encrypt(" "dst" ", " "src" " []byte)"
.SS "tripleDESCipher"
.B type tripleDESCipher struct {
.RS
.sp 0
.B //contains unexported fields.
.RE
.B }
.PP
A tripleDESCipher is an instance of TripleDES encryption. 
.PP
.BR "func (*tripleDESCipher) BlockSize() int"
.PP
.BR "func (*tripleDESCipher) Decrypt(" "dst" ", " "src" " []byte)"
.PP
.BR "func (*tripleDESCipher) Encrypt(" "dst" ", " "src" " []byte)"
