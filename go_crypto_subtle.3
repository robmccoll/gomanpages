.\"    Automatically generated by mango(1)
.TH "subtle" 3 "2014-11-26" "version 2014-11-26" "Go Packages"
.SH "NAME"
subtle \- Package subtle implements functions that are often useful in cryptographic
code but require careful thought to use correctly.
.SH "SYNOPSIS"
.B import \*(lqsubtle\(rq
.sp
.RB "func " ConstantTimeByteEq
.sp 0
.RB "func " ConstantTimeCompare
.sp 0
.RB "func " ConstantTimeCopy
.sp 0
.RB "func " ConstantTimeEq
.sp 0
.RB "func " ConstantTimeLessOrEq
.sp 0
.RB "func " ConstantTimeSelect
.sp 0
.SH "FUNCTIONS"
.PP
.BR "func ConstantTimeByteEq(" "x" ", " "y" " uint8) int"
.PP
ConstantTimeByteEq returns 1 if x == y and 0 otherwise. 
.PP
.BR "func ConstantTimeCompare(" "x" ", " "y" " []byte) int"
.PP
ConstantTimeCompare returns 1 iff the two equal length slices, x and y, have equal contents. 
The time taken is a function of the length of the slices and is independent of the contents. 
.PP
.BR "func ConstantTimeCopy(" "v" " int, " "x" ", " "y" " []byte)"
.PP
ConstantTimeCopy copies the contents of y into x (a slice of equal length) if v == 1. 
If v == 0, x is left unchanged. 
Its behavior is undefined if v takes any other value. 
.PP
.BR "func ConstantTimeEq(" "x" ", " "y" " int32) int"
.PP
ConstantTimeEq returns 1 if x == y and 0 otherwise. 
.PP
.BR "func ConstantTimeLessOrEq(" "x" ", " "y" " int) int"
.PP
ConstantTimeLessOrEq returns 1 if x <= y and 0 otherwise. 
Its behavior is undefined if x or y are negative or > 2**31 
.B \-
1. 
.PP
.BR "func ConstantTimeSelect(" "v" ", " "x" ", " "y" " int) int"
.PP
ConstantTimeSelect returns x if v is 1 and y if v is 0. 
Its behavior is undefined if v takes any other value. 
