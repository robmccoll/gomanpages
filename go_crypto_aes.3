.\"    Automatically generated by mango(1)
.TH "aes" 3 "2014-11-26" "version 2014-11-26" "Go Packages"
.SH "NAME"
aes \- Package aes implements AES encryption (formerly Rijndael), as defined in
U.S.
.SH "SYNOPSIS"
.B import \*(lqaes\(rq
.sp
.B Constants
.sp 0
.RB "func " NewCipher
.sp 0
.RB "type " KeySizeError
.sp 0
.RS
.RB "func (KeySizeError) " Error
.sp 0
.RE
.RB "type " aesCipher
.sp 0
.RS
.RB "func (*aesCipher) " BlockSize
.sp 0
.RB "func (*aesCipher) " Decrypt
.sp 0
.RB "func (*aesCipher) " Encrypt
.sp 0
.RE
.SH "DESCRIPTION"
Package aes implements AES encryption (formerly Rijndael), as defined in U.S. 
Federal Information Processing Standards Publication 197. 
.SH "CONSTANTS"
The AES block size in bytes. 
.PP
.B const 
.B BlockSize 
.sp 0
.SH "FUNCTIONS"
.PP
.BR "func NewCipher(" "key" " []byte) (cipher.Block, error)"
.PP
NewCipher creates and returns a new cipher.Block. 
The key argument should be the AES key, either 16, 24, or 32 bytes to select AES\-128, AES\-192, or AES\-256. 
.SH "TYPES"
.SS "KeySizeError"
.B type KeySizeError int
.PP
.PP
.BR "func (KeySizeError) Error() string"
.SS "aesCipher"
.B type aesCipher struct {
.RS
.sp 0
.B //contains unexported fields.
.RE
.B }
.PP
A cipher is an instance of AES encryption using a particular key. 
.PP
.BR "func (*aesCipher) BlockSize() int"
.PP
.BR "func (*aesCipher) Decrypt(" "dst" ", " "src" " []byte)"
.PP
.BR "func (*aesCipher) Encrypt(" "dst" ", " "src" " []byte)"
