.\"    Automatically generated by mango(1)
.TH "encoding" 3 "2014-11-26" "version 2014-11-26" "Go Packages"
.SH "NAME"
encoding \- Package encoding defines interfaces shared by other packages that
convert data to and from byte-level and textual representations.
.SH "SYNOPSIS"
.B import \*(lqencoding\(rq
.sp
.RB "type " BinaryMarshaler
.sp 0
.RB "type " BinaryUnmarshaler
.sp 0
.RB "type " TextMarshaler
.sp 0
.RB "type " TextUnmarshaler
.sp 0
.SH "DESCRIPTION"
Package encoding defines interfaces shared by other packages that convert data to and from byte\-level and textual representations. 
Packages that check for these interfaces include encoding/gob, encoding/json, and encoding/xml. 
As a result, implementing an interface once can make a type useful in multiple encodings. 
Standard types that implement these interfaces include time.Time and net.IP. 
The interfaces come in pairs that produce and consume encoded data. 
.SH "TYPES"
.SS "BinaryMarshaler"
.B type BinaryMarshaler interface {
.RS
.B MarshalBinary() (data []byte, err error)
.sp 0
.RE
.B }
.PP
BinaryMarshaler is the interface implemented by an object that can marshal itself into a binary form. 
.PP
MarshalBinary encodes the receiver into a binary form and returns the result. 
.SS "BinaryUnmarshaler"
.B type BinaryUnmarshaler interface {
.RS
.B UnmarshalBinary(data []byte) error
.sp 0
.RE
.B }
.PP
BinaryUnmarshaler is the interface implemented by an object that can unmarshal a binary representation of itself. 
.PP
UnmarshalBinary must be able to decode the form generated by MarshalBinary. 
UnmarshalBinary must copy the data if it wishes to retain the data after returning. 
.SS "TextMarshaler"
.B type TextMarshaler interface {
.RS
.B MarshalText() (text []byte, err error)
.sp 0
.RE
.B }
.PP
TextMarshaler is the interface implemented by an object that can marshal itself into a textual form. 
.PP
MarshalText encodes the receiver into UTF\-8\-encoded text and returns the result. 
.SS "TextUnmarshaler"
.B type TextUnmarshaler interface {
.RS
.B UnmarshalText(text []byte) error
.sp 0
.RE
.B }
.PP
TextUnmarshaler is the interface implemented by an object that can unmarshal a textual representation of itself. 
.PP
UnmarshalText must be able to decode the form generated by MarshalText. 
UnmarshalText must copy the text if it wishes to retain the text after returning. 
