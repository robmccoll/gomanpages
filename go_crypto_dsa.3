.\"    Automatically generated by mango(1)
.TH "dsa" 3 "2014-11-26" "version 2014-11-26" "Go Packages"
.SH "NAME"
dsa \- Package dsa implements the Digital Signature Algorithm, as defined in FIPS 186-3.
.SH "SYNOPSIS"
.B import \*(lqdsa\(rq
.sp
.B Variables
.sp 0
.RB "func " GenerateKey
.sp 0
.RB "func " GenerateParameters
.sp 0
.RB "func " Sign
.sp 0
.RB "func " Verify
.sp 0
.RB "type " ParameterSizes
.sp 0
.RB "type " Parameters
.sp 0
.RB "type " PrivateKey
.sp 0
.RB "type " PublicKey
.sp 0
.SH "VARIABLES"
ErrInvalidPublicKey results when a public key is not usable by this code. 
FIPS is quite strict about the format of DSA keys, but other code may be less so. 
Thus, when using keys which may have been generated by other code, this error must be handled. 
.PP
.B var 
.B ErrInvalidPublicKey 
.sp 0
.SH "FUNCTIONS"
.PP
.BR "func GenerateKey(" "priv" " *PrivateKey, " "rand" " io.Reader) error"
.PP
GenerateKey generates a public&private key pair. 
The Parameters of the PrivateKey must already be valid (see GenerateParameters). 
.PP
.BR "func GenerateParameters(" "params" " *Parameters, " "rand" " io.Reader, " "sizes" " ParameterSizes) (" "err" " error)"
.PP
GenerateParameters puts a random, valid set of DSA parameters into params. 
This function takes many seconds, even on fast machines. 
.PP
.BR "func Sign(" "rand" " io.Reader, " "priv" " *PrivateKey, " "hash" " []byte) (" "r" ", " "s" " *big.Int, " "err" " error)"
.PP
Sign signs an arbitrary length hash (which should be the result of hashing a larger message) using the private key, priv. 
It returns the signature as a pair of integers. 
The security of the private key depends on the entropy of rand. 
.PP
Note that FIPS 186\-3 section 4.6 specifies that the hash should be truncated to the byte\-length of the subgroup. 
This function does not perform that truncation itself. 
.PP
.BR "func Verify(" "pub" " *PublicKey, " "hash" " []byte, " "r" ", " "s" " *big.Int) bool"
.PP
Verify verifies the signature in r, s of hash using the public key, pub. 
It reports whether the signature is valid. 
.PP
Note that FIPS 186\-3 section 4.6 specifies that the hash should be truncated to the byte\-length of the subgroup. 
This function does not perform that truncation itself. 
.SH "TYPES"
.SS "ParameterSizes"
.B type ParameterSizes int
.PP
ParameterSizes is a enumeration of the acceptable bit lengths of the primes in a set of DSA parameters. 
See FIPS 186\-3, section 4.2. 
.PP
.B const (
.RS
.B L1024N160 
.sp 0
.B L2048N224 
.sp 0
.B L2048N256 
.sp 0
.B L3072N256 
.sp 0
.RE
.B )
.SS "Parameters"
.B type Parameters struct {
.RS
.B P, Q, G *big.Int
.RE
.B }
.PP
Parameters represents the domain parameters for a key. 
These parameters can be shared across many keys. 
The bit length of Q must be a multiple of 8. 
.SS "PrivateKey"
.B type PrivateKey struct {
.RS
.B PublicKey
.sp 0
.B X *big.Int
.RE
.B }
.PP
PrivateKey represents a DSA private key. 
.SS "PublicKey"
.B type PublicKey struct {
.RS
.B Parameters
.sp 0
.B Y *big.Int
.RE
.B }
.PP
PublicKey represents a DSA public key. 
